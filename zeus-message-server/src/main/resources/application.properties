spring.profiles.active=dev
spring.banner.location=config/banner/zeus.txt
server.port=0

# 是否开启grpc server
plus.jdk.grpc.enabled=true
plus.jdk.grpc.client.enabled=true
# 指定端口
plus.jdk.grpc.port=10501
# 指定监听的服务地址
plus.jdk.grpc.address=*
# 是否支持长连接
plus.jdk.grpc.enable-keep-alive=true
# 长连接超时断开时间
plus.jdk.grpc.keep-alive-timeout=111
# NioEventLoopGroup master核心线程数
plus.jdk.grpc.master-thread-num=1
# NioEventLoopGroup worker线程数
plus.jdk.grpc.worker-thread-num=10
# 数据包最大多少字节
plus.jdk.grpc.max-inbound-message-size=100000
# 发送的请求头最大限制
plus.jdk.grpc.max-inbound-metadata-size=100000

plus.jdk.websocket.enabled=true
# 指定host
plus.jdk.websocket.host=0.0.0.0
# 指定websocket端口
plus.jdk.websocket.port=10502
# 指定自定义实现的验证器
plus.jdk.websocket.session-authenticator=plus.jdk.zeus.message.websocket.session.ZeusWSSessionAuthenticator
# boss线程池线程数，默认为1
plus.jdk.websocket.boss-loop-group-threads=1
# worker线程池线程数,若不指定则默认为CPU核心数 * 2
plus.jdk.websocket.worker-loop-group-threads=5
# 是否需允许跨域
plus.jdk.websocket.cors-allow-credentials=true
# 跨域的header头
plus.jdk.websocket.cors-origins[0]=""
# 是否使用 NioEventLoopGroup 来处理请求
plus.jdk.websocket.use-event-executor-group=true
# 指定 NioEventLoopGroup 线程池数量
plus.jdk.websocket.event-executor-group-threads=0
# 连接超时时间
#plus.jdk.websocket.connect-timeout-millis=
# 指定了内核为此套接口排队的最大连接个数
#plus.jdk.websocket.SO_BACKLOG=
# 旋转计数用于控制每次Netty写入操作调用基础socket.write(...)的次数
#plus.jdk.websocket.write-spin-count=
# 日志等级
plus.jdk.websocket.log-level=debug
# udp广播监听端口，若小于等于0，则不监听消息
plus.jdk.websocket.broadcast-monitor-port=10503
# 是否将接收到的UDP广播信息打印到日志中
plus.jdk.websocket.print-broadcast-message=true

# 启用GRPC RAS认证
plus.jdk.zeus.grpc.auth.enabled=true
# 业务号， 可使用 ` java -jar zeus-cli/build/zeus-im.jar -rsaKeyCreate -keySize 1024` 生成
# 该业务号默认为zeus内部通信调用
plus.jdk.zeus.grpc.auth.secrets[0].app-key=zeus
# 颁发给当前业务号RSA公钥(注意生产环境换掉,不要用默认的)
plus.jdk.zeus.grpc.auth.secrets[0].public-key=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMJPDoOkYtbkL3WZ77AuyjDH6571qUaENyQQGb0NM7F7mok5U8blL_Xld6wLijhDlZEMdf9LMh0mbZx9d8QX5pjiZQE6Wo1NS8Awykg9Uc2QmfPx-W3xjyypxwyCeVW-cU4St1micF2A8lw-54duqnZkElQHFFGclLIDpSqWaROwIDAQAB
# 颁发给当前业务号RSA私钥(注意生产环境换掉,不要用默认的)
plus.jdk.zeus.grpc.auth.secrets[0].private-key=MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAMwk8Og6Ri1uQvdZnvsC7KMMfrnvWpRoQ3JBAZvQ0zsXuaiTlTxuUv9eV3rAuKOEOVkQx1_0syHSZtnH13xBfmmOJlATpajU1LwDDKSD1RzZCZ8_H5bfGPLKnHDIJ5Vb5xThK3WaJwXYDyXD7nh26qdmQSVAcUUZyUsgOlKpZpE7AgMBAAECgYAqHmcL6tYG0oyDfxyjel97Zn0Q_LbKDtb3kDz2OngSZZs7EjQEs1hxcrQG0hNmPUYdv636-MAqtr_cp_QoIVUksF59M7ZXZcPeYR6UFCfyuvXfQccZmPhLS7J2q7jpEp1ddaQk6oLcFsux6CAOWyoxu0yiMh4LRt9Se18Xg4iBBQJBAPr2gdivDQgUcvOOhMyiJKN6-RdiqTOgr2NRkCPkpHVjejGYkEqx6h5g3WyWrkEq2bBPpwwMEgBI7mCRjUPyfy8CQQDQPd8OytCezjxzlO8mBZSO3u30f8JD19TCo23DZ4hVhLEEV_AZYU_pIWi_gw-pKaY-0hVjS_us5qPduSGWVmu1AkAJYMbPYxM4lxMImO3Le8-ksEa4of4yqLGFI5ogTT38CQCa89mIgQd_pR0BHsxaMRC7bu6OG7Fcg10tDKNbw6cPAkAe5C7EyP1tsXZyRvO7FjTVhOiTzqgI3Gmpfgj4ZdFprkd8N3dcrHzoPpaFYnHeTFlnFE8r7cel_IjuiVocLTHJAkEA4l4LD1X-QKooFAEgi2IoWmz58pclqzQuRvwjRYCrChJqwgcXg-xLWCtH6GTZSYYCPw5824x3ILSlKS-jydAHZQ
# 服务白名单授权，被授予的业务可以调用哪些Grpc服务, 可细化到某个方法，例如：
# plus.jdk.zeus.common.grpc.protoc.Greeter/sayHello 代表可调用 plus.jdk.zeus.common.grpc.protoc.Greeter 下的 sayHello 方法
# plus.jdk.zeus.common.grpc.protoc.Greeter 代表可调用 plus.jdk.zeus.common.grpc.protoc.Greeter 下的所有方法
plus.jdk.zeus.grpc.auth.secrets[0].white-list[0]=plus.jdk.zeus.common.grpc.protoc.Greeter

